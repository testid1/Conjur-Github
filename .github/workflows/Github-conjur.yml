name: Fetch Conjur Secret

on:
  push:
    branches:
      - main

jobs:
  retrieve-secret:
    runs-on: ubuntu-latest
    env:                                  # ← job‑level env for all steps
      CONJUR_ACCOUNT: conjur
      CONJUR_APPLIANCE_URL: ${{ secrets.CONJUR_APPLIANCE_URL }}
      CONJUR_AUTHN_LOGIN: ${{ secrets.CONJUR_AUTHN_LOGIN }}
      CONJUR_API_KEY:   ${{ secrets.CONJUR_API_KEY }}

    steps:
      - name: Authenticate to Conjur
        run: |
          set -e                                       # → exit on any error

          # 1) Call Conjur to get an auth token
          RESP=$(curl -s -w "\n%{http_code}" \
            --request POST \
            --data "$CONJUR_API_KEY" \
            "$CONJUR_APPLIANCE_URL/api/authn/$CONJUR_ACCOUNT/$CONJUR_AUTHN_LOGIN/authenticate")

          RAW_TOKEN=$(echo "$RESP" | sed '$d')         # drop status line
          TOKEN=$(echo "$RAW_TOKEN" | tr -d '\r\n')    # strip CR/LF
          CODE=$(echo "$RESP" | tail -n1)              # HTTP status

          if [ "$CODE" != "200" ]; then
            echo "❌ Auth failed (status $CODE)"
            echo "Response body: $RAW_TOKEN"
            exit 1                                    # fail the step
          fi

          echo "✅ Authentication successful. Token length: ${#TOKEN}"
          echo "CONJUR_TOKEN=$TOKEN" >> $GITHUB_ENV    # persist for next step

      - name: Fetch secret
        run: |
          set -e

          # 2) Build the URL for your secret
          RAW_PATH=data%2Fvault%2Fconjurtest%2Fmysecret%2Fpassword
          URL="$CONJUR_APPLIANCE_URL/api/secrets/$CONJUR_ACCOUNT/variable/$RAW_PATH"

          # DEBUG: confirm the header format
          echo "Using header → Authorization: Token token=\"$CONJUR_TOKEN\""

          # 3) Fetch the secret with the persisted token
          SECRET_RESP=$(curl -s -w "\n%{http_code}" \
            -H "Authorization: Token token=\"$CONJUR_TOKEN\"" \
            "$URL")

          SECRET=$(echo "$SECRET_RESP" | sed '$d')
          FETCH_CODE=$(echo "$SECRET_RESP" | tail -n1)

          if [ "$FETCH_CODE" != "200" ]; then
            echo "❌ Secret fetch failed (status $FETCH_CODE)"
            echo "Response body: $SECRET"
            exit 1                                    # fail the step
          fi

          echo "✅ Retrieved secret: $SECRET"
