name: Fetch Conjur Secret
on:
  push:
    branches: [ main ]
jobs:
  retrieve-secret:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Install curl and jq
      run: sudo apt-get update && sudo apt-get install -y curl jq
    - name: Authenticate to Conjur and retrieve secret
      env:
        CONJUR_ACCOUNT: conjur
        CONJUR_APPLIANCE_URL: ${{ secrets.CONJUR_APPLIANCE_URL }}
        CONJUR_AUTHN_LOGIN: ${{ secrets.CONJUR_AUTHN_LOGIN }}
        CONJUR_API_KEY: ${{ secrets.CONJUR_API_KEY }}
        CONJUR_VAR_KEY: ${{secrets.CONJUR_VAR_KEY }}
      run: |
        set -e
        
        echo "=============================="
        echo "Logging into Conjur..."
        echo "Account: $CONJUR_ACCOUNT"
        echo "Appliance URL: $CONJUR_APPLIANCE_URL"
        echo "Authn Login: $CONJUR_AUTHN_LOGIN"
        echo "=============================="
        
        echo "Authenticating..."
        FULL_AUTHN_URL="$CONJUR_APPLIANCE_URL/api/authn/$CONJUR_ACCOUNT/$CONJUR_AUTHN_LOGIN/authenticate"
        echo "Calling authn URL: $FULL_AUTHN_URL"
        
        # Perform authentication
        RESPONSE=$(curl -s -i -w "\n%{http_code}" \
        --request POST \
        --header "Content-Type: text/plain" \
        --header "Accept: application/json" \
        --data "$CONJUR_API_KEY" \
        "$FULL_AUTHN_URL")

        
        # Show full response for debugging
        echo "========== RAW AUTH RESPONSE =========="
        echo "$RESPONSE"
        echo "======================================="
        
        # Extract HTTP status code
        STATUS_CODE=$(echo "$RESPONSE" | tail -n1)
        
        # Extract body (starts after the first empty line)
        BODY=$(echo "$RESPONSE" | sed -n '/^\r\{0,1\}$/,$p' | sed '$d')
        
        echo "Parsed body:"
        echo "$BODY"
        
        if [ "$STATUS_CODE" != "200" ]; then
          echo "Authentication failed!"
          echo "Status code: $STATUS_CODE"
          echo "Body: $BODY"
          exit 1
        fi
        
        # Validate that body is valid JSON
        if ! echo "$BODY" | jq empty 2>/dev/null; then
          echo "Authentication response is not valid JSON!"
          exit 1
        fi
        
        # Extract JWT token
        AUTHN_TOKEN=$(echo "$BODY" | jq -r '.protected + "." + .payload + "." + .signature')
        
        if [ -z "$AUTHN_TOKEN" ] || [ "$AUTHN_TOKEN" == "null..null" ]; then
          echo "Token extraction failed. AUTHN_TOKEN is empty or invalid."
          exit 1
        fi
        
        echo "Auth token (first 50 chars): ${AUTHN_TOKEN:0:50}..."
        echo "Token length: ${#AUTHN_TOKEN}"
        echo "Authentication successful"
        echo "=============================="
        
        # Fetch secret
        echo "Fetching secret..."
        SECRET_URL="$CONJUR_APPLIANCE_URL/api/secrets/$CONJUR_ACCOUNT/variable/$CONJUR_VAR_KEY"
        echo "Secret fetch URL: $SECRET_URL"
        
        SECRET_RESPONSE=$(curl -s -w "\n%{http_code}" \
          -H "Authorization: Token token=\"$AUTHN_TOKEN\"" \
          "$SECRET_URL")
        
        SECRET_BODY=$(echo "$SECRET_RESPONSE" | sed '$d')
        SECRET_STATUS=$(echo "$SECRET_RESPONSE" | tail -n1)
        
        echo "Secret fetch status: $SECRET_STATUS"
        
        if [ "$SECRET_STATUS" != "200" ]; then
          echo "Failed to fetch secret"
          echo "Response:"
          echo "$SECRET_BODY"
          exit 1
        fi
        
        echo "Retrieved secret: $SECRET_BODY"
