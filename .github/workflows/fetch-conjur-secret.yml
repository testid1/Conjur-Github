name: Fetch Conjur Secret
on:
  push:
    branches: [ main ]
jobs:
  retrieve-secret:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install curl and jq
        run: sudo apt-get update && sudo apt-get install -y curl jq

      - name: Authenticate to Conjur and retrieve secret
        env:
          CONJUR_ACCOUNT: conjur
          CONJUR_APPLIANCE_URL: ${{ secrets.CONJUR_APPLIANCE_URL }}
          CONJUR_AUTHN_LOGIN: ${{ secrets.CONJUR_AUTHN_LOGIN }}
          CONJUR_API_KEY: ${{ secrets.CONJUR_API_KEY }}
          CONJUR_VAR_KEY: ${{ secrets.CONJUR_VAR_KEY }}
        run: |
          set -e

          echo "Logging into Conjur..."
          FULL_AUTHN_URL="${CONJUR_APPLIANCE_URL}/api/authn/${CONJUR_ACCOUNT}/${CONJUR_AUTHN_LOGIN}/authenticate"

          # Authenticate and capture token
          RAW_RESP=$(curl -s -i \
            --request POST \
            --header "Content-Type: text/plain" \
            --data "${CONJUR_API_KEY}" \
            "${FULL_AUTHN_URL}")
          STATUS=$(echo "$RAW_RESP" | tail -n1)
          BODY=$(echo "$RAW_RESP" | sed -n '/^\r\{0,1\}$/,$p' | sed '$d')

          if [ "$STATUS" != "200" ]; then
            echo "Authentication failed (HTTP $STATUS)"
            echo "$BODY"
            exit 1
          fi

          # Build the full JWT string
          AUTHN_TOKEN=$(echo "$BODY" | jq -r '.protected + "." + .payload + "." + .signature')
          if [ -z "$AUTHN_TOKEN" ] || [ "$AUTHN_TOKEN" == "null..null" ]; then
            echo "Token extraction failed."
            exit 1
          fi

          echo "Token length: ${#AUTHN_TOKEN}"
          echo "Authentication successful."

          # Fetch the secret using the raw token
          SECRET_URL="${CONJUR_APPLIANCE_URL}/api/secrets/${CONJUR_ACCOUNT}/variable/${CONJUR_VAR_KEY}"
          SECRET_RESP=$(curl -s -w "\n%{http_code}" \
            --header "Authorization: Token token=${AUTHN_TOKEN}" \
            "${SECRET_URL}")

          SECRET_BODY=$(echo "$SECRET_RESP" | sed '$d')
          SECRET_STATUS=$(echo "$SECRET_RESP" | tail -n1)

          if [ "$SECRET_STATUS" != "200" ]; then
            echo "Failed to fetch secret (HTTP $SECRET_STATUS)"
            echo "$SECRET_BODY"
            exit 1
          fi

          echo "Retrieved secret:"
          echo "$SECRET_BODY"
